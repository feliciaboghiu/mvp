{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar'; // import Form from 'react-bootstrap/Form';\n\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import Login from \"./components/login.js\";\n\nimport SignUp from \"./components/signUp.js\";\nimport ValidatedLoginForm from \"./components/validatedLoginForm.js\";\nconst API_URL = \"/inventarium/lists\";\nconst API_URL2 = \"/inventarium/lists/items\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      newList: \"\",\n      nextListId: 6,\n      editedListId: null,\n      list: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(API_URL).then(res => res.json()).then(json => {\n      // Upon success, update lists\n      this.setState({\n        lists: json\n      });\n    }).catch(error => {\n      // upon failure, show error message\n      console.log(\"Error\");\n    });\n  }\n\n  async addNewItem(newItem, list_id) {\n    let item = {\n      text: newItem,\n      list_id: list_id\n    }; // POST\n\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    };\n\n    try {\n      let response = await fetch(API_URL2, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: newLists\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n    }\n\n    this.props.history.push('/mylists');\n  }\n\n  async addNewList(newTitle) {\n    let newList = {\n      id: this.state.nextListId,\n      title: newTitle,\n      items: []\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newLists],\n          nextListId: this.state.newListId + 1\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  setEditedListId(editedListId) {\n    this.setState({\n      editedListId: editedListId\n    });\n  }\n\n  async deleteItem(list_id, item_id) {\n    // DELETE item from database\n    let options = {\n      method: \"DELETE\"\n    };\n\n    try {\n      let response = await fetch(`${API_URL2}/${item_id}/$`, options);\n\n      if (response.ok) {\n        let newLists = await response.json(); // upon success, update the list of items\n\n        this.setState({\n          lists: newLists\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async deleteList(list_id) {\n    // DELETE list from database\n    let options = {\n      method: \"DELETE\"\n    };\n\n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: newLists\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async handleEditList(list_id) {\n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex(l => l.id === list_id); // PUT\n\n    let options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newLists)\n    };\n\n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n\n      if (response.ok) {\n        let newList = newLists[newIx];\n        this.setState({\n          list: newList\n        });\n        console.log(newList);\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  saveList(list_id, newTitle, newItems) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find(l => l.id === list_id);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({\n      lists: newLists\n    });\n    this.props.history.push('/mylists');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"info\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(NavbarBrand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 60\n      }\n    }, \"INVENTARIUM\"))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/mylists\",\n      exact: true,\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 38\n      }\n    }, \"My Lists\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/addlist\",\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 38\n      }\n    }, \"Create New List\")))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/mylists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ItemList, {\n      setEditedListId: editedListId => this.setEditedListId(editedListId),\n      lists: this.state.lists,\n      deleteItem: (list_id, item_id) => this.deleteItem(list_id, item_id),\n      deleteList: list_id => this.deleteList(list_id),\n      handleEditList: list_id => this.handleEditList(list_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/additem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InsertForm, {\n      editedListId: this.state.editedListId,\n      newItem: this.state.newItem,\n      addNewItem: (newItem, list_id) => this.addNewItem(newItem, list_id),\n      id: this.state.lists.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/addlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NewList, {\n      addNewList: newTitle => this.addNewList(newTitle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editlist/:id\",\n      render: routeProps => {\n        let list = this.state.lists.find(l => l.id === routeProps.match.params.id);\n        return /*#__PURE__*/React.createElement(EditList, {\n          list: list,\n          saveList: (id, t, item) => this.saveList(id, t, item),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 26\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ValidatedLoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Error404View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nclass Home extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 38\n      }\n    }, \"SIGN IN\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 38\n      }\n    }, \"SIGN UP\"))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js"],"names":["React","ItemList","InsertForm","NewList","BrowserRouter","Router","Switch","Route","NavLink","Link","withRouter","Error404View","EditList","Button","Navbar","NavbarBrand","SignUp","ValidatedLoginForm","API_URL","API_URL2","App","Component","constructor","props","state","lists","newList","nextListId","editedListId","list","componentDidMount","fetch","then","res","json","setState","catch","error","console","log","addNewItem","newItem","list_id","item","text","options","method","headers","body","JSON","stringify","response","ok","newLists","status","statusText","err","message","history","push","addNewList","newTitle","id","title","items","newListId","setEditedListId","deleteItem","item_id","deleteList","handleEditList","newIx","findIndex","l","saveList","newItems","find","render","routeProps","match","params","t","Home"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Form from 'react-bootstrap/Form';\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Login from \"./components/login.js\";\nimport SignUp from \"./components/signUp.js\";\nimport ValidatedLoginForm from \"./components/validatedLoginForm.js\";\n\n\nconst API_URL = \"/inventarium/lists\";\nconst API_URL2 = \"/inventarium/lists/items\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        lists: [],\n        newList: \"\",\n        nextListId: 6,\n        editedListId: null,\n        list: null,\n      };\n    }\n\n  componentDidMount() {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(json => {\n        // Upon success, update lists\n        this.setState({ lists: json });\n      })\n      .catch(error => {\n        // upon failure, show error message\n        console.log(\"Error\")\n      });\n  }\n\n  async addNewItem(newItem, list_id) {\n    let item = { text: newItem, list_id: list_id};\n    // POST\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(item)\n    };\n\n  try {\n    let response = await fetch(API_URL2, options);\n    if (response.ok) {\n    let newLists = await response.json();\n    this.setState({ lists: newLists });\n    } else {\n      console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n  }\n    this.props.history.push('/mylists');\n}\n\n  async addNewList(newTitle) {\n    let newList = { id: this.state.nextListId, title: newTitle, items: [] };\n\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newLists],\n          nextListId: this.state.newListId +1 });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  setEditedListId(editedListId) {\n    this.setState({ editedListId: editedListId });\n  }\n\n  async deleteItem(list_id, item_id) {\n    // DELETE item from database\n    let options = {\n      method: \"DELETE\"\n    };\n    try {\n      let response = await fetch(`${API_URL2}/${item_id}/$`, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        // upon success, update the list of items\n        this.setState({ lists: newLists });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async deleteList(list_id) {\n    // DELETE list from database\n    let options = {\n      method: \"DELETE\"\n    };\n    \n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({ lists: newLists });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async handleEditList(list_id) {\n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex((l) => l.id === list_id);\n    \n    // PUT\n    let options = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newLists)\n    };\n\n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n      if (response.ok) {\n        let newList = newLists[newIx];\n        this.setState({ list: newList });\n        console.log(newList);\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  saveList(list_id, newTitle, newItems) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find((l) => l.id === list_id);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({lists: newLists})\n    this.props.history.push('/mylists');\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <div>\n            <Navbar bg='info' expand=\"lg\">\n              <Button variant=\"info\"><NavLink to='/' exact><NavbarBrand>INVENTARIUM</NavbarBrand></NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/mylists' exact activeClassName='selected'>My Lists</NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/addlist' activeClassName='selected'>Create New List</NavLink></Button>\n            </Navbar>\n          </div>\n              \n            <Switch> \n              <Route path='/' exact>\n                <Home />\n              </Route>\n\n              <Route path='/mylists'>\n                <ItemList\n                setEditedListId={(editedListId) => this.setEditedListId(editedListId)}\n                lists={this.state.lists}\n                deleteItem={(list_id, item_id) => this.deleteItem(list_id, item_id)}\n                deleteList={(list_id) => this.deleteList(list_id)}\n                handleEditList={(list_id) => this.handleEditList(list_id)} />\n              </Route>\n\n              <Route path='/additem'> \n                <InsertForm editedListId={this.state.editedListId}\n                newItem={this.state.newItem}\n                addNewItem={(newItem, list_id) => this.addNewItem(newItem, list_id)}\n                id={this.state.lists.id}/>\n              </Route>\n\n              <Route path='/addlist'>\n                <NewList addNewList={(newTitle) => this.addNewList(newTitle)} />\n              </Route>\n\n              <Route path='/editlist/:id' render={\n                (routeProps) => {\n                  let list = this.state.lists.find((l) => l.id === routeProps.match.params.id);\n                  return <EditList list={list}\n                  saveList={(id, t, item) => this.saveList(id, t, item)}\n                  />\n                }\n              } />\n              \n              <div>\n                <div>\n                  <Route path='/login'>\n                    <ValidatedLoginForm />\n                  </Route>\n                  <Route path='/sign-up'>\n                    <SignUp />\n                  </Route>\n                </div>\n              </div>\n\n              <Error404View />\n\n            </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return(\n      <div className=\"text-center\">\n        <h1>Welcome</h1>\n        <div>\n              <Button variant=\"info\"><Link to=\"/login\">SIGN IN</Link></Button>\n              <Button variant=\"info\"><Link to=\"/sign-up\">SIGN UP</Link></Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}