{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/EditList.js\";\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass EditList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showInput = event => {\n      let boolean = this.state.showInput = !this.state.showInput;\n      this.setState({\n        showInput: boolean\n      });\n    };\n\n    this.state = {\n      showInput: false,\n      title: props.list.title\n    };\n  }\n\n  handleTitleChange(event) {\n    this.setState({\n      title: event.target.value\n    });\n  }\n\n  handleChange(event) {\n    let {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let items = [];\n\n    for (let elem of event.target.elements) {\n      // iterate over all form elements\n      if (elem.item.startsWith('item-')) {\n        // if it's one of our text fields...\n        items.push(elem.value); // ... push it on the names array\n      }\n    }\n\n    this.props.saveList(this.props.list.id, this.state.title, items); // call handler passed down as a props from parent\n  }\n\n  render() {\n    let list = this.props.list;\n    let title = this.props.list.title;\n    let listJsx = this.props.list.items.map((i, ix) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showInput ? 'dontshow' : 'show',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, i), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: 'item-' + ix,\n      defaultValue: i,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Edit List\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      onClick: e => this.showInput(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Show Input Fields\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showInput ? 'show' : 'dontshow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Choose one item to edit: \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showInput ? 'dontshow' : 'show',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, title)), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showInput ? 'show' : 'dontshow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      value: this.state.title,\n      onChange: e => this.handleTitleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, listJsx), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showInput ? 'show' : 'dontshow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Save Fields\"))));\n  }\n\n}\n\nexport default EditList;","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/EditList.js"],"names":["React","Button","EditList","Component","constructor","props","showInput","event","boolean","state","setState","title","list","handleTitleChange","target","value","handleChange","name","handleSubmit","preventDefault","items","elem","elements","item","startsWith","push","saveList","id","render","listJsx","map","i","ix","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass EditList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showInput: false,\n            title: props.list.title\n        };\n    }\n\n    handleTitleChange(event) {\n        this.setState({\n            title: event.target.value\n        });\n    }\n\n    handleChange(event) {\n        let { name, value } = event.target;\n        this.setState({ [name]: value });   \n    };\n\n    handleSubmit(event) {\n        event.preventDefault();\n        let items = [];\n        for (let elem of event.target.elements) {  // iterate over all form elements\n            if (elem.item.startsWith('item-')) {  // if it's one of our text fields...\n                items.push(elem.value);  // ... push it on the names array\n            }\n        }  \n        this.props.saveList(this.props.list.id, this.state.title, items); // call handler passed down as a props from parent\n        }\n\n\n    showInput = (event) => {\n        let boolean = (this.state.showInput = !this.state.showInput);\n        this.setState({showInput: boolean}) \n    }\n\n    \n    render() {\n        let list = this.props.list;\n        let title = this.props.list.title;\n        let listJsx = (\n            this.props.list.items.map((i, ix) => (\n                <li key={i}>\n                    <div className={this.state.showInput ? 'dontshow' : 'show'}>\n                        {i}\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            name={'item-'+ix}\n                            defaultValue={i}\n                            onChange={(e) => this.handleChange(e)}\n                        />\n                    </div>\n                </li>\n            ))\n        );\n            \n        return (\n\n                <div className=\"itemList\">\n                    <h2>Edit List</h2> \n                    <Button variant=\"info\" onClick={(e)=>this.showInput(e)}>Show Input Fields</Button>\n                    <br />\n                    <div className={this.state.showInput ? 'show' : 'dontshow'}>\n                        <label>Choose one item to edit: </label> \n                    </div>\n                    <div className={this.state.showInput ? 'dontshow' : 'show'}>\n                        <h3>\n                            {title}\n                        </h3>\n                    </div>\n                    <form onSubmit={(e) => this.handleSubmit(e)}>    \n                        <div className={this.state.showInput ? 'show' : 'dontshow'}>\n                            <h3>\n                                <input\n                                    name=\"title\"\n                                    type='text'\n                                    value={this.state.title}\n                                    onChange={(e) => this.handleTitleChange(e)}\n                                >\n                                </input>\n                            </h3>\n                        </div>\n                        <ul>\n                            {listJsx}\n                        </ul>\n                        <div className={this.state.showInput ? 'show' : 'dontshow'}>\n                            <Button variant=\"info\" type=\"submit\">Save Fields</Button>\n                        </div>\n                    </form>\n                                           \n                </div>\n        )\n    }\n}\n\nexport default EditList;"]},"metadata":{},"sourceType":"module"}