{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/components/signUp.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; // const sleep = ms => new Promise(r => setTimeout(r, ms));\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: async values => {\n      // await sleep(500);\n      alert(JSON.stringify(values, null, 2));\n      window.location.href = \"/mylists\";\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"firstName\",\n    name: \"firstName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, formik.errors.firstName) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"lastName\",\n    name: \"lastName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, formik.errors.lastName) : null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, formik.errors.email) : null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/components/signUp.js"],"names":["React","useFormik","Yup","SignupForm","formik","initialValues","firstName","lastName","email","validationSchema","object","string","max","required","onSubmit","values","alert","JSON","stringify","window","location","href","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n// const sleep = ms => new Promise(r => setTimeout(r, ms));\n\nconst SignupForm = () => {\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n    },\n\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      lastName: Yup.string()\n        .max(20, 'Must be 20 characters or less')\n        .required('Required'),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Required'),\n    }),\n\n    onSubmit: async values => {\n        // await sleep(500);\n      alert(JSON.stringify(values, null, 2));\n      window.location.href = \"/mylists\";\n    },\n  });\n\n  return (\n\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"firstName\">First Name</label>\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n      />\n\n      {formik.touched.firstName && formik.errors.firstName ? (\n        <div>{formik.errors.firstName}</div>\n      ) : null}\n\n      <label htmlFor=\"lastName\">Last Name</label>\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastName}\n      />\n\n      {formik.touched.lastName && formik.errors.lastName ? (\n\n        <div>{formik.errors.lastName}</div>\n      ) : null}\n      <label htmlFor=\"email\"></label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n\n      {formik.touched.email && formik.errors.email ? (\n\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <button type=\"submit\" className=\"btn\">Submit</button>\n    </form>\n\n  );\n};\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}