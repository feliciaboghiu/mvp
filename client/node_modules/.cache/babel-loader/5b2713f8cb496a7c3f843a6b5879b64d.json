{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { Switch, Route, NavLink } from \"react-router-dom\";\nimport { withRouter, Router } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nconst API_URL = \"/api/inventarium\";\nconst TEST_ITEMS = [{\n  id: 1,\n  title: 'Albums',\n  name: [\"The Beatles - Sgt. Pepper' Lonely Hearts Club Band\", 'The Beach Boys - Pet Sounds', \"The Beatles - Revolver\", 'Bob Dylan - Highway 61 Revisited', \"Marvin Gaye - What's Going On\", 'The Rolling Stones - Exile on Main Street']\n}, {\n  id: 2,\n  title: 'Films',\n  name: ['Good Will Hunting', 'The Royal Tenenbaums', \"Matrix\", \"The Godfather\", \"Fight Club\", \"Pulp Fiction\"]\n}, {\n  id: 3,\n  title: \"Pantry\",\n  name: ['Wild Rice', \"Black Beans\", 'Toilet paper', 'Cat food', 'Condensed Milk']\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewItem = (newName, listId) => {\n      // copy lists\n      let newLists = [...this.state.lists]; // find the index of the list using listId\n\n      let newIx = newLists.findIndex(l => l.id === listId); // get that specific list using the index\n\n      let newList = newLists[newIx]; // add newName to that list  \n\n      newList.name.push(newName); // update state replacing lists with the specific list\n\n      this.setState({\n        lists: newLists\n      }); // change view to itemList\n\n      this.props.history.push('/');\n    };\n\n    this.addNewList = newTitle => {\n      let newList = {\n        id: this.state.nextListId,\n        title: newTitle,\n        name: []\n      };\n      this.setState({\n        lists: [...this.state.lists, newList],\n        nextListId: this.state.nextListId + 1\n      }); // Redirect to '/'\n\n      this.props.history.push('/');\n    };\n\n    this.setEditedListId = editedListId => {\n      this.setState({\n        editedListId: editedListId\n      });\n    };\n\n    this.deleteItem = (listId, name) => {\n      //console.log(listId, name)\n      let newLists = [...this.state.lists];\n      let newList = newLists.find(l => l.id === listId);\n      newList.name = newList.name.filter(n => n !== name);\n      this.setState({\n        lists: newLists\n      });\n    };\n\n    this.deleteList = listId => {\n      let newLists = [...this.state.lists];\n      let newIx = newLists.findIndex(l => l.id === listId);\n      newLists.splice(newIx, 1);\n      this.setState({\n        lists: newLists\n      });\n      console.log(newLists);\n    };\n\n    this.state = {\n      lists: TEST_ITEMS,\n      // [],\n      newList: '',\n      nextListId: 4,\n      editedListId: null,\n      list: null,\n      isShown: false,\n      showLogIn: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(API_URL).then(res => res.json()).then(json => {\n      // Upon success, update tasks\n      this.setState({\n        lists\n      });\n    });\n  }\n\n  handleEditList(listId) {\n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex(l => l.id === listId);\n    let newList = newLists[newIx];\n    this.setState({\n      list: newList\n    });\n    console.log(newList);\n  }\n\n  showButtons(event) {\n    event.preventDefault();\n    let boolean = this.state.isShown = !this.state.isShown;\n    this.setState({\n      isShown: boolean\n    });\n  }\n\n  saveList(listId, newTitle, newNames) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find(l => l.id === listId);\n    newList.title = newTitle;\n    newList.name = newNames;\n    this.setState({\n      lists: newLists\n    });\n    this.props.history.push('/');\n  }\n\n  toggleLogIn(event) {\n    let boolean = this.state.showLogIn = !this.state.showLogIn;\n    this.setState({\n      showLogIn: boolean\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showLogIn ? 'true' : 'false',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Inventarium\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Remember Me\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      onClick: e => this.toggleLogIn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Don't have an acount?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showLogIn ? 'false' : 'true',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"info\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Inventarium\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 38\n      }\n    }, \"Item List\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      onClick: e => this.showButtons(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Show Buttons\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/addlist\",\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 38\n      }\n    }, \"Create New List\"))))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ItemList, {\n      setEditedListId: this.setEditedListId,\n      lists: this.state.lists,\n      deleteItem: this.deleteItem,\n      deleteList: this.deleteList,\n      handleEditList: i => this.handleEditList(i),\n      isShown: this.state.isShown,\n      toggleLogIn: e => this.toggleLogIn(e),\n      showLogIn: this.state.showLogIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/additem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InsertForm, {\n      editedListId: this.state.editedListId,\n      newName: this.state.newName,\n      addNewItem: this.addNewItem,\n      id: this.state.lists.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/addlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NewList, {\n      addNewList: title => this.addNewList(title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editlist/:id\",\n      render: routeProps => {\n        let list = this.state.lists.find(l => l.id == routeProps.match.params.id);\n        return /*#__PURE__*/React.createElement(EditList, {\n          list: list,\n          saveList: (i, t, n) => this.saveList(i, t, n),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 26\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Error404View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js"],"names":["React","ItemList","InsertForm","NewList","Switch","Route","NavLink","withRouter","Router","Error404View","EditList","Button","Navbar","Form","API_URL","TEST_ITEMS","id","title","name","App","Component","constructor","props","addNewItem","newName","listId","newLists","state","lists","newIx","findIndex","l","newList","push","setState","history","addNewList","newTitle","nextListId","setEditedListId","editedListId","deleteItem","find","filter","n","deleteList","splice","console","log","list","isShown","showLogIn","componentDidMount","fetch","then","res","json","handleEditList","showButtons","event","preventDefault","boolean","saveList","newNames","toggleLogIn","render","e","i","routeProps","match","params","t"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,cAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAGA,MAAMC,OAAO,GAAG,kBAAhB;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,IAAI,EAAE,CAAC,oDAAD,EAAuD,6BAAvD,EAAsF,wBAAtF,EAAgH,kCAAhH,EAAoJ,+BAApJ,EAAqL,2CAArL;AAAhC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,OAAhB;AAAyBC,EAAAA,IAAI,EAAE,CAAC,mBAAD,EAAsB,sBAAtB,EAA8C,QAA9C,EAAwD,eAAxD,EAAyE,YAAzE,EAAuF,cAAvF;AAA/B,CAFiB,EAGjB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE,QAAhB;AAA0BC,EAAAA,IAAI,EAAE,CAAC,WAAD,EAAc,aAAd,EAA6B,cAA7B,EAA6C,UAA7C,EAAyD,gBAAzD;AAAhC,CAHiB,CAAnB;;AAMA,MAAMC,GAAN,SAAkBnB,KAAK,CAACoB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,UAbmB,GAaN,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChC;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf,CAFgC,CAGhC;;AACA,UAAIC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASS,MAAnC,CAAZ,CAJgC,CAKhC;;AACA,UAAIO,OAAO,GAAGN,QAAQ,CAACG,KAAD,CAAtB,CANgC,CAOhC;;AACAG,MAAAA,OAAO,CAACd,IAAR,CAAae,IAAb,CAAkBT,OAAlB,EARgC,CAShC;;AACA,WAAKU,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEF;AAAR,OAAd,EAVgC,CAWhC;;AACA,WAAKJ,KAAL,CAAWa,OAAX,CAAmBF,IAAnB,CAAwB,GAAxB;AACD,KA1BkB;;AAAA,SAqCnBG,UArCmB,GAqCLC,QAAD,IAAc;AACzB,UAAIL,OAAO,GAAG;AAAChB,QAAAA,EAAE,EAAE,KAAKW,KAAL,CAAWW,UAAhB;AAA4BrB,QAAAA,KAAK,EAAEoB,QAAnC;AAA6CnB,QAAAA,IAAI,EAAE;AAAnD,OAAd;AACA,WAAKgB,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBI,OAAtB,CADK;AAEZM,QAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWW,UAAX,GAAwB;AAFxB,OAAd,EAFyB,CAMzB;;AACA,WAAKhB,KAAL,CAAWa,OAAX,CAAmBF,IAAnB,CAAwB,GAAxB;AACD,KA7CkB;;AAAA,SA+CnBM,eA/CmB,GA+CAC,YAAD,IAAiB;AACjC,WAAKN,QAAL,CAAc;AAACM,QAAAA,YAAY,EAACA;AAAd,OAAd;AACD,KAjDkB;;AAAA,SAmDnBC,UAnDmB,GAmDN,CAAChB,MAAD,EAASP,IAAT,KAAkB;AAC7B;AACA,UAAIQ,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACA,UAAII,OAAO,GAAGN,QAAQ,CAACgB,IAAT,CAAeX,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASS,MAA9B,CAAd;AACAO,MAAAA,OAAO,CAACd,IAAR,GAAec,OAAO,CAACd,IAAR,CAAayB,MAAb,CAAqBC,CAAD,IAAOA,CAAC,KAAK1B,IAAjC,CAAf;AACA,WAAKgB,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEF;AAAR,OAAd;AAED,KA1DkB;;AAAA,SA4DnBmB,UA5DmB,GA4DLpB,MAAD,IAAY;AACvB,UAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACA,UAAIC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASS,MAAnC,CAAZ;AACAC,MAAAA,QAAQ,CAACoB,MAAT,CAAgBjB,KAAhB,EAAuB,CAAvB;AACA,WAAKK,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEF;AAAR,OAAd;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACD,KAlEkB;;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEb,UADI;AACQ;AACnBiB,MAAAA,OAAO,EAAE,EAFE;AAGXM,MAAAA,UAAU,EAAE,CAHD;AAIXE,MAAAA,YAAY,EAAE,IAJH;AAKXS,MAAAA,IAAI,EAAE,IALK;AAMXC,MAAAA,OAAO,EAAE,KANE;AAOXC,MAAAA,SAAS,EAAE;AAPA,KAAb;AASD;;AAiBHC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACvC,OAAD,CAAL,CACGwC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAI;AACZ;AACA,WAAKtB,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KALH;AAMD;;AAiCD6B,EAAAA,cAAc,CAAChC,MAAD,EAAS;AACrB,QAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACI,SAAT,CAAoBC,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASS,MAAnC,CAAZ;AACA,QAAIO,OAAO,GAAGN,QAAQ,CAACG,KAAD,CAAtB;AACA,SAAKK,QAAL,CAAc;AAACe,MAAAA,IAAI,EAAEjB;AAAP,KAAd;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACD;;AAED0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,OAAO,GAAG,KAAKlC,KAAL,CAAWuB,OAAX,GAAqB,CAAC,KAAKvB,KAAL,CAAWuB,OAA/C;AACA,SAAKhB,QAAL,CAAc;AAACgB,MAAAA,OAAO,EAAEW;AAAV,KAAd;AACC;;AAEHC,EAAAA,QAAQ,CAACrC,MAAD,EAASY,QAAT,EAAmB0B,QAAnB,EAA6B;AACnC,QAAIrC,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAf;AACA,QAAII,OAAO,GAAGN,QAAQ,CAACgB,IAAT,CAAeX,CAAD,IAAOA,CAAC,CAACf,EAAF,KAASS,MAA9B,CAAd;AACAO,IAAAA,OAAO,CAACf,KAAR,GAAgBoB,QAAhB;AACAL,IAAAA,OAAO,CAACd,IAAR,GAAe6C,QAAf;AACA,SAAK7B,QAAL,CAAc;AAACN,MAAAA,KAAK,EAAEF;AAAR,KAAd;AACA,SAAKJ,KAAL,CAAWa,OAAX,CAAmBF,IAAnB,CAAwB,GAAxB;AAED;;AAED+B,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,QAAIE,OAAO,GAAI,KAAKlC,KAAL,CAAWwB,SAAX,GAAuB,CAAC,KAAKxB,KAAL,CAAWwB,SAAlD;AACE,SAAKjB,QAAL,CAAc;AAACiB,MAAAA,SAAS,EAAEU;AAAZ,KAAd;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAEL,wBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWwB,SAAX,GAAuB,MAAvB,GAAgC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,WAAW,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,WAAW,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,eASE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,eAYE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAGe,CAAD,IAAK,KAAKF,WAAL,CAAiBE,CAAjB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAZF,CAJF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,eAqBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADA,CADF,CArBF,CADF,eAiCA;AAAK,MAAA,SAAS,EAAE,KAAKvC,KAAL,CAAWwB,SAAX,GAAuB,OAAvB,GAAiC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,MAAM,EAAC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,eAAe,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAvB,CAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAGe,CAAD,IAAK,KAAKR,WAAL,CAAiBQ,CAAjB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,UAAZ;AAAuB,MAAA,eAAe,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAvB,CAJF,CADF,CADF,CAjCA,eA6CI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAW,MAAA,eAAe,EAAE,KAAK3B,eAAjC;AAAkD,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KAApE;AAA2E,MAAA,UAAU,EAAE,KAAKa,UAA5F;AAAwG,MAAA,UAAU,EAAE,KAAKI,UAAzH;AAAqI,MAAA,cAAc,EAAGsB,CAAD,IAAO,KAAKV,cAAL,CAAoBU,CAApB,CAA5J;AAAoL,MAAA,OAAO,EAAE,KAAKxC,KAAL,CAAWuB,OAAxM;AAAiN,MAAA,WAAW,EAAGgB,CAAD,IAAK,KAAKF,WAAL,CAAiBE,CAAjB,CAAnO;AAAwP,MAAA,SAAS,EAAE,KAAKvC,KAAL,CAAWwB,SAA9Q;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAME,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKxB,KAAL,CAAWa,YAArC;AAAmD,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWH,OAAvE;AAAgF,MAAA,UAAU,EAAE,KAAKD,UAAjG;AAA6G,MAAA,EAAE,EAAE,KAAKI,KAAL,CAAWC,KAAX,CAAiBZ,EAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,eAUE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEC,KAAK,IAAI,KAAKmB,UAAL,CAAgBnB,KAAhB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,eAcE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,MAAM,EAC/BmD,UAAD,IAAgB;AACd,YAAInB,IAAI,GAAG,KAAKtB,KAAL,CAAWC,KAAX,CAAiBc,IAAjB,CAAuBX,CAAD,IAAOA,CAAC,CAACf,EAAF,IAAQoD,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBtD,EAA7D,CAAX;AACA,4BAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEiC,IAAhB;AAAuB,UAAA,QAAQ,EAAE,CAACkB,CAAD,EAAII,CAAJ,EAAO3B,CAAP,KAAa,KAAKkB,QAAL,CAAcK,CAAd,EAAiBI,CAAjB,EAAoB3B,CAApB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAED,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAsBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,CA7CJ,CAFF;AA2EH;;AA/K+B;;AAkLlC,eAAerC,UAAU,CAACY,GAAD,CAAzB","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { Switch, Route, NavLink} from \"react-router-dom\";\nimport { withRouter, Router } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\n\n\nconst API_URL = \"/api/inventarium\";\n\nconst TEST_ITEMS = [\n  { id: 1, title: 'Albums', name: [\"The Beatles - Sgt. Pepper' Lonely Hearts Club Band\", 'The Beach Boys - Pet Sounds', \"The Beatles - Revolver\", 'Bob Dylan - Highway 61 Revisited', \"Marvin Gaye - What's Going On\", 'The Rolling Stones - Exile on Main Street']},\n  { id: 2, title: 'Films', name: ['Good Will Hunting', 'The Royal Tenenbaums', \"Matrix\", \"The Godfather\", \"Fight Club\", \"Pulp Fiction\"]},\n  { id: 3, title: \"Pantry\", name: ['Wild Rice', \"Black Beans\", 'Toilet paper', 'Cat food', 'Condensed Milk']}\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        lists: TEST_ITEMS, // [],\n        newList: '',\n        nextListId: 4,\n        editedListId: null,\n        list: null,\n        isShown: false,\n        showLogIn: true\n      };\n    }\n\n  addNewItem = (newName, listId) => {\n    // copy lists\n    let newLists = [...this.state.lists]\n    // find the index of the list using listId\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    // get that specific list using the index\n    let newList = newLists[newIx]\n    // add newName to that list  \n    newList.name.push(newName)\n    // update state replacing lists with the specific list\n    this.setState({lists: newLists})\n    // change view to itemList\n    this.props.history.push('/');\n  }\n  \n  componentDidMount() {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(json => {\n        // Upon success, update tasks\n        this.setState({ lists})\n      })\n  }\n\n  addNewList = (newTitle) => {\n    let newList = {id: this.state.nextListId, title: newTitle, name: []}\n    this.setState({\n      lists: [...this.state.lists, newList],\n      nextListId: this.state.nextListId + 1\n    });\n    // Redirect to '/'\n    this.props.history.push('/');\n  }\n\n  setEditedListId = (editedListId) =>{\n    this.setState({editedListId:editedListId});\n  }\n\n  deleteItem = (listId, name) => {\n    //console.log(listId, name)\n    let newLists = [...this.state.lists]\n    let newList = newLists.find((l) => l.id === listId);\n    newList.name = newList.name.filter((n) => n !== name);\n    this.setState({lists: newLists})\n    \n  }\n\n  deleteList = (listId) => {  \n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    newLists.splice(newIx, 1)\n    this.setState({lists: newLists})\n    console.log(newLists)\n  }\n\n  handleEditList(listId) {\n    let newLists = [...this.state.lists]\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    let newList = newLists[newIx]\n    this.setState({list: newList})\n    console.log(newList);\n  }\n\n  showButtons(event) {\n    event.preventDefault();\n    let boolean= (this.state.isShown = !this.state.isShown);\n    this.setState({isShown: boolean}) \n    }\n\n  saveList(listId, newTitle, newNames) {\n    let newLists = [...this.state.lists]\n    let newList = newLists.find((l) => l.id === listId);\n    newList.title = newTitle;\n    newList.name = newNames;\n    this.setState({lists: newLists})\n    this.props.history.push('/');\n    \n  }\n\n  toggleLogIn(event) {\n    let boolean = (this.state.showLogIn = !this.state.showLogIn);\n      this.setState({showLogIn: boolean}) \n  }\n\n  render() {\n    \n      return (\n\n        <div className=\"container\">\n          <div className={this.state.showLogIn ? 'true' : 'false'}>\n            <h1>Inventarium</h1>\n            {/* <h2>Welcome to Inventarium</h2> */}\n            <br/>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                {/* <Form.Label for=\"exampleInputEmail\">Email Adress</Form.Label> */}\n                <Form.Control type=\"email\" placeholder=\"Email\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                {/* <Form.Label for=\"exampleInputPassword1\">Password</Form.Label> */}\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <input type=\"checkbox\" />\n              <label>Remember Me</label>\n              <br />\n              <div className=\"white\">\n                <Button variant=\"info\" onClick={(e)=>this.toggleLogIn(e)}>Submit</Button>\n              </div>\n            </Form>\n            <br />\n            <Form>\n              <div className=\"sign-up\">\n              <Form.Label>\n                Don't have an acount?\n                <br />\n                <Button variant=\"info\">Sign Up</Button>\n              </Form.Label>\n              </div>\n            </Form>\n          </div>\n\n        <div className={this.state.showLogIn ? 'false' : 'true'}>  \n          <div className=\"white\">\n            <Navbar bg='info' expand=\"lg\">\n              <Navbar.Brand>Inventarium</Navbar.Brand>\n              <Button variant=\"info\"><NavLink to='/' exact activeClassName='selected'>Item List</NavLink></Button>\n              <Button variant=\"info\" onClick={(e)=>this.showButtons(e)}>Show Buttons</Button>\n              <Button variant=\"info\"><NavLink to='/addlist' activeClassName='selected'>Create New List</NavLink></Button>\n            </Navbar>\n            \n          </div>\n        </div>\n              \n            <Switch>  \n\n              <Route path='/' exact>\n                <ItemList  setEditedListId={this.setEditedListId} lists={this.state.lists} deleteItem={this.deleteItem} deleteList={this.deleteList} handleEditList={(i) => this.handleEditList(i)} isShown={this.state.isShown} toggleLogIn={(e)=>this.toggleLogIn(e)} showLogIn={this.state.showLogIn} />\n              </Route>\n\n              <Route path='/additem'> \n                <InsertForm editedListId={this.state.editedListId} newName={this.state.newName} addNewItem={this.addNewItem} id={this.state.lists.id}/>\n              </Route>\n\n              <Route path='/addlist'>\n                <NewList addNewList={title => this.addNewList(title)} />\n              </Route>\n\n              <Route path='/editlist/:id' render={\n                (routeProps) => {\n                  let list = this.state.lists.find((l) => l.id == routeProps.match.params.id);\n                  return <EditList list={list}  saveList={(i, t, n) => this.saveList(i, t, n)}\n                  />\n                }\n              } />\n\n              <Error404View />\n\n            </Switch>\n          \n        </div>\n      )\n  }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}