{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./components/login.js\";\nimport SignUp from \"./components/signUp.js\";\nconst API_URL = \"/inventarium/lists\"; // const TEST_ITEMS = [\n//   { id: 1, title: 'Albums', name: [\"The Beatles - Sgt. Pepper' Lonely Hearts Club Band\", 'The Beach Boys - Pet Sounds', \"The Beatles - Revolver\", 'Bob Dylan - Highway 61 Revisited', \"Marvin Gaye - What's Going On\", 'The Rolling Stones - Exile on Main Street']},\n//   { id: 2, title: 'Films', name: ['Good Will Hunting', 'The Royal Tenenbaums', \"Matrix\", \"The Godfather\", \"Fight Club\", \"Pulp Fiction\"]},\n//   { id: 3, title: \"Pantry\", name: ['Wild Rice', \"Black Beans\", 'Toilet paper', 'Cat food', 'Condensed Milk']}\n// ];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addNewItem = (newItem, listId) => {\n      // copy lists\n      let newLists = [...this.state.lists]; // find the index of the list using listId\n\n      let newIx = newLists.findIndex(l => l.id === listId); // get that specific list using the index\n\n      let newList = newLists[newIx]; // add newItem to that list  \n\n      newList.items.push(newItem); // update state replacing lists with the specific list\n\n      this.setState({\n        lists: newLists\n      }); // change view to itemList\n\n      this.props.history.push('/mylists');\n    };\n\n    this.addNewList = newTitle => {\n      let newList = {\n        id: this.state.nextListId,\n        title: newTitle,\n        items: []\n      };\n      this.setState({\n        lists: [...this.state.lists, newList],\n        nextListId: this.state.nextListId + 1\n      }); // Redirect to '/mylists'\n\n      this.props.history.push('/mylists');\n    };\n\n    this.setEditedListId = editedListId => {\n      this.setState({\n        editedListId: editedListId\n      });\n    };\n\n    this.deleteItem = (listId, items) => {\n      //console.log(listId, items)\n      let newLists = [...this.state.lists];\n      let newList = newLists.find(l => l.id === listId);\n      newList.items = newList.items.filter(i => i !== items);\n      this.setState({\n        lists: newLists\n      });\n    };\n\n    this.deleteList = listId => {\n      let newLists = [...this.state.lists];\n      let newIx = newLists.findIndex(l => l.id === listId);\n      newLists.splice(newIx, 1);\n      this.setState({\n        lists: newLists\n      }); // console.log(newLists)\n    };\n\n    this.state = {\n      lists: [],\n      newList: '',\n      nextListId: 4,\n      editedListId: null,\n      list: null // isShown: false,\n      // showLogIn: true\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(API_URL).then(res => res.json()).then(json => {\n      // Upon success, update lists\n      this.setState({\n        lists: json\n      });\n    }).catch(error => {// upon failure, show error message\n    });\n  } // async addNewItem(newName, listId) {\n  //   let item = { title: this.state.title };\n  //   // POST\n  //   let options = {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(item)\n  //   };\n  //   try {\n  //     let response = await fetch(API_URL, options);\n  //     if (response.ok) {\n  //       let newLists = await response.json();\n  //       this.setState({ lists: newLists });\n  //     } else {\n  //       console.log(\"ERROR:\", response.status, response.statusText);\n  //     }\n  //   } catch (err) {\n  //     console.log(\"EXCEPTION:\", err.message);\n  //   }\n  //   this.props.history.push('/mylists');\n  // }\n\n\n  async addNewList(newTitle) {\n    event.preventDefault();\n    let newList = {\n      id: this.state.nextListId,\n      title: newTitle,\n      items: []\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newList],\n          nextListId: this.state.newListId + 1\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\");\n    }\n  }\n\n  handleEditList(listId) {\n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex(l => l.id === listId);\n    let newList = newLists[newIx];\n    this.setState({\n      list: newList\n    });\n    console.log(newList);\n  } // showButtons(event) {\n  //   event.preventDefault();\n  //   let boolean= (this.state.isShown = !this.state.isShown);\n  //   this.setState({isShown: boolean}) \n  //   }\n\n\n  saveList(listId, newTitle, newItems) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find(l => l.id === listId);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({\n      lists: newLists\n    });\n    this.props.history.push('/mylists');\n  } // toggleLogIn(event) {\n  //   let boolean = (this.state.showLogIn = !this.state.showLogIn);\n  //     this.setState({showLogIn: boolean}) \n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"info\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(NavbarBrand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 60\n      }\n    }, \"INVENTARIUM\"))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/mylists\",\n      exact: true,\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 38\n      }\n    }, \"My Lists\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/addlist\",\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 38\n      }\n    }, \"Create New List\")))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/mylists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ItemList, {\n      setEditedListId: this.setEditedListId,\n      lists: this.state.lists,\n      deleteItem: this.deleteItem,\n      deleteList: this.deleteList,\n      handleEditList: i => this.handleEditList(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/additem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InsertForm, {\n      editedListId: this.state.editedListId,\n      newItem: this.state.newItem,\n      addNewItem: this.addNewItem,\n      id: this.state.lists.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/addlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NewList, {\n      addNewList: title => this.addNewList(title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editlist/:id\",\n      render: routeProps => {\n        let list = this.state.lists.find(l => l.id == routeProps.match.params.id);\n        return /*#__PURE__*/React.createElement(EditList, {\n          list: list,\n          saveList: (listId, newTitle, newItems) => this.saveList(listId, newTitle, newItems),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 26\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"auth-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Error404View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nclass Home extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 38\n      }\n    }, \"SIGN IN\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 38\n      }\n    }, \"SIGN UP\"))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js"],"names":["React","ItemList","InsertForm","NewList","BrowserRouter","Router","Switch","Route","NavLink","Link","withRouter","Error404View","EditList","Button","Navbar","Form","NavbarBrand","Login","SignUp","API_URL","App","Component","constructor","props","addNewItem","newItem","listId","newLists","state","lists","newIx","findIndex","l","id","newList","items","push","setState","history","addNewList","newTitle","nextListId","title","setEditedListId","editedListId","deleteItem","find","filter","i","deleteList","splice","list","componentDidMount","fetch","then","res","json","catch","error","event","preventDefault","options","method","headers","body","JSON","stringify","response","ok","newListId","console","log","status","statusText","err","handleEditList","saveList","newItems","item","render","routeProps","match","params","Home"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from \"./components/login.js\";\nimport SignUp from \"./components/signUp.js\";\n\n\nconst API_URL = \"/inventarium/lists\";\n\n// const TEST_ITEMS = [\n//   { id: 1, title: 'Albums', name: [\"The Beatles - Sgt. Pepper' Lonely Hearts Club Band\", 'The Beach Boys - Pet Sounds', \"The Beatles - Revolver\", 'Bob Dylan - Highway 61 Revisited', \"Marvin Gaye - What's Going On\", 'The Rolling Stones - Exile on Main Street']},\n//   { id: 2, title: 'Films', name: ['Good Will Hunting', 'The Royal Tenenbaums', \"Matrix\", \"The Godfather\", \"Fight Club\", \"Pulp Fiction\"]},\n//   { id: 3, title: \"Pantry\", name: ['Wild Rice', \"Black Beans\", 'Toilet paper', 'Cat food', 'Condensed Milk']}\n// ];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        lists: [],\n        newList: '',\n        nextListId: 4,\n        editedListId: null,\n        list: null\n        // isShown: false,\n        // showLogIn: true\n      };\n    }\n\n  componentDidMount() {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(json => {\n        // Upon success, update lists\n        this.setState({ lists: json });\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n  }\n\n  // async addNewItem(newName, listId) {\n    \n  //   let item = { title: this.state.title };\n\n  //   // POST\n  //   let options = {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(item)\n  //   };\n\n  //   try {\n  //     let response = await fetch(API_URL, options);\n  //     if (response.ok) {\n  //       let newLists = await response.json();\n  //       this.setState({ lists: newLists });\n  //     } else {\n  //       console.log(\"ERROR:\", response.status, response.statusText);\n  //     }\n  //   } catch (err) {\n  //     console.log(\"EXCEPTION:\", err.message);\n  //   }\n  //   this.props.history.push('/mylists');\n  // }\n\n  addNewItem = (newItem, listId) => {\n    // copy lists\n    let newLists = [...this.state.lists]\n    // find the index of the list using listId\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    // get that specific list using the index\n    let newList = newLists[newIx]\n    // add newItem to that list  \n    newList.items.push(newItem)\n    // update state replacing lists with the specific list\n    this.setState({lists: newLists})\n    // change view to itemList\n    this.props.history.push('/mylists');\n  }\n\n\n  async addNewList(newTitle) {\n    event.preventDefault();\n\n    let newList = {id: this.state.nextListId, title: newTitle, items: []};\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newList],\n          nextListId: this.state.newListId +1 });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\")\n    }\n  }\n\n  addNewList = (newTitle) => {\n    let newList = {id: this.state.nextListId, title: newTitle, items: []}\n    this.setState({\n      lists: [...this.state.lists, newList],\n      nextListId: this.state.nextListId + 1\n    });\n    // Redirect to '/mylists'\n    this.props.history.push('/mylists');\n  }\n\n  setEditedListId = (editedListId) =>{\n    this.setState({ editedListId: editedListId });\n  }\n\n  deleteItem = (listId, items) => {\n    //console.log(listId, items)\n    let newLists = [...this.state.lists]\n    let newList = newLists.find((l) => l.id === listId);\n    newList.items = newList.items.filter((i) => i !== items);\n    this.setState({lists: newLists})\n    \n  }\n\n  deleteList = (listId) => {  \n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    newLists.splice(newIx, 1)\n    this.setState({lists: newLists})\n    // console.log(newLists)\n  }\n\n  handleEditList(listId) {\n    let newLists = [...this.state.lists]\n    let newIx = newLists.findIndex((l) => l.id === listId);\n    let newList = newLists[newIx]\n    this.setState({list: newList})\n    console.log(newList);\n  }\n\n  // showButtons(event) {\n  //   event.preventDefault();\n  //   let boolean= (this.state.isShown = !this.state.isShown);\n  //   this.setState({isShown: boolean}) \n  //   }\n\n  saveList(listId, newTitle, newItems) {\n    let newLists = [...this.state.lists]\n    let newList = newLists.find((l) => l.id === listId);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({lists: newLists})\n    this.props.history.push('/mylists');\n    \n  }\n\n  // toggleLogIn(event) {\n  //   let boolean = (this.state.showLogIn = !this.state.showLogIn);\n  //     this.setState({showLogIn: boolean}) \n  // }\n\n  render() {\n    \n    return (\n      <Router>\n        <div className=\"container\">\n        <div className=\"text-center\">  \n            <Navbar bg='info' expand=\"lg\">\n              <Button variant=\"info\"><NavLink to='/' exact><NavbarBrand>INVENTARIUM</NavbarBrand></NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/mylists' exact activeClassName='selected'>My Lists</NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/addlist' activeClassName='selected'>Create New List</NavLink></Button>\n            </Navbar>\n          </div>\n              \n            <Switch> \n              <Route path='/' exact>\n                <Home />\n              </Route>\n\n              <Route path='/mylists'>\n                <ItemList setEditedListId={this.setEditedListId} lists={this.state.lists} deleteItem={this.deleteItem} deleteList={this.deleteList} handleEditList={(i) => this.handleEditList(i)} />\n              </Route>\n\n              <Route path='/additem'> \n                <InsertForm editedListId={this.state.editedListId} newItem={this.state.newItem} addNewItem={this.addNewItem} id={this.state.lists.id}/>\n              </Route>\n\n              <Route path='/addlist'>\n                <NewList addNewList={title => this.addNewList(title)} />\n              </Route>\n\n              <Route path='/editlist/:id' render={\n                (routeProps) => {\n                  let list = this.state.lists.find((l) => l.id == routeProps.match.params.id);\n                  return <EditList list={list}\n                  saveList={(listId, newTitle, newItems) => this.saveList(listId, newTitle, newItems)}\n                  />\n                }\n              } />\n              \n              <div className=\"auth-wrapper\">\n                <div className=\"auth-inner\">\n                  <Route path='/login'>\n                    <Login />\n                  </Route>\n                  <Route path='/sign-up'>\n                    <SignUp />\n                  </Route>\n                </div>\n              </div>\n\n              <Error404View />\n\n            </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return(\n      <div className=\"text-center\">\n        <h1>Welcome</h1>\n        <div>\n              <Button variant=\"info\"><Link to=\"/login\">SIGN IN</Link></Button>\n              <Button variant=\"info\"><Link to=\"/sign-up\">SIGN UP</Link></Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}