{"ast":null,"code":"var _jsxFileName = \"/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar'; // import Form from 'react-bootstrap/Form';\n\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import Login from \"./components/login.js\";\n\nimport SignUp from \"./components/signUp.js\";\nimport ValidatedLoginForm from \"./components/validatedLoginForm.js\";\nconst API_URL = \"/inventarium/lists\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      newList: \"\",\n      nextListId: 6,\n      editedListId: null,\n      list: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(API_URL).then(res => res.json()).then(json => {\n      // Upon success, update lists\n      this.setState({\n        lists: json\n      });\n    }).catch(error => {\n      // upon failure, show error message\n      console.log(\"Error\");\n    });\n  } //   async addNewItem(newItem, list_id) {\n  //     // copy lists\n  //     let newItems = [...this.state.lists.items];\n  //     // find the index of the list using listId\n  //     let newIx = newItem.findIndex((l) => l.id === list_id);\n  //     // get that specific list using the index\n  //     let newList = newItems[newIx]\n  //     // add newItem to that list  \n  //     newList.items.push(newItem)\n  //     // POST\n  //     let options = {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(newItems)\n  //     };\n  //   try {\n  //     let response = await fetch(API_URL, options);\n  //     if (response.ok) {\n  //     let newLists = await response.json();\n  //     this.setState({ lists: newLists });\n  //     } else {\n  //       console.log(\"ERROR:\", response.status, response.statusText);\n  //       }\n  //     } catch (err) {\n  //       console.log(\"EXCEPTION:\", err.message);\n  //   }\n  //     this.props.history.push('/mylists');\n  // }\n  // addNewItem = (newItem, list_id) => {\n  //   // copy lists\n  //   let newLists = [...this.state.lists];\n  //   // find the index of the list using list_id\n  //   let newIx = newLists.findIndex((l) => l.id === list_id);\n  //   // get that specific list using the index\n  //   let newList = newLists[newIx];\n  //   // add newItem to that list  \n  //   newList.item.push(newItem)\n  //   // update state replacing lists with the specific list\n  //   this.setState({lists: newLists})\n  //   // change view to itemList\n  //   this.props.history.push('/mylists');\n  // }\n\n\n  async addNewList(newTitle) {\n    let newList = {\n      id: this.state.nextListId,\n      title: newTitle\n    };\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newLists],\n          nextListId: this.state.newListId + 1\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n    } // Redirect to '/mylists'\n\n\n    this.props.history.push('/mylists');\n  }\n\n  setEditedListId(editedListId) {\n    this.setState({\n      editedListId: editedListId\n    });\n  }\n\n  async deleteItem(list_id, item_id) {\n    // DELETE item from database\n    let options = {\n      method: \"DELETE\"\n    };\n\n    try {\n      let response = await fetch(\"/inventarium/item\", options);\n\n      if (response.ok) {\n        let newLists = [...this.state.lists];\n        let newList = newLists.find(l => l.id === list_id);\n        newList.item = newList.item.filter(i => i !== item_id); // upon success, update the list of items\n\n        this.setState({\n          lists: newLists\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async deleteList(list_id) {\n    // DELETE list from database\n    let options = {\n      method: \"DELETE\"\n    };\n\n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n\n      if (response.ok) {\n        let newLists = await response.json();\n        let newIx = newLists.findIndex(l => l.id === list_id);\n        newLists.splice(newIx, 1); // upon success, update tasks\n\n        this.setState({\n          lists: newLists\n        });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  handleEditList(list_id) {\n    let newLists = [...this.state.lists];\n    let newIx = newLists.findIndex(l => l.id === list_id);\n    let newList = newLists[newIx];\n    this.setState({\n      list: newList\n    });\n    console.log(newList);\n  }\n\n  saveList(list_id, newTitle, newItems) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find(l => l.id === list_id);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({\n      lists: newLists\n    });\n    this.props.history.push('/mylists');\n  } // toggleLogIn(event) {\n  //   event.preventDefault();\n  //   let boolean = (this.state.showLogIn = !this.state.showLogIn);\n  //     this.setState({showLogIn: boolean}) \n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.showLogIn ? 'false' : 'true',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"info\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(NavbarBrand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 60\n      }\n    }, \"INVENTARIUM\"))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/mylists\",\n      exact: true,\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 38\n      }\n    }, \"My Lists\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/addlist\",\n      activeClassName: \"selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 38\n      }\n    }, \"Create New List\")))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/mylists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ItemList, {\n      setEditedListId: this.setEditedListId,\n      lists: this.state.lists,\n      deleteItem: this.deleteItem,\n      deleteList: list_id => this.deleteList(list_id),\n      handleEditList: i => this.handleEditList(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/additem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InsertForm, {\n      editedListId: this.state.editedListId,\n      newItem: this.state.newItem,\n      addNewItem: this.addNewItem,\n      id: this.state.lists.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/addlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NewList, {\n      addNewList: newTitle => this.addNewList(newTitle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/editlist/:id\",\n      render: routeProps => {\n        let list = this.state.lists.find(l => l.id === routeProps.match.params.id);\n        return /*#__PURE__*/React.createElement(EditList, {\n          list: list,\n          saveList: (list_id, newTitle, newItems) => this.saveList(list_id, newTitle, newItems),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 26\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ValidatedLoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SignUp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Error404View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nclass Home extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }, \"Welcome\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 38\n      }\n    }, \"SIGN IN\")), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 38\n      }\n    }, \"SIGN UP\"))));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/feliciaboghiu/Desktop/FE/mvp/client/src/App.js"],"names":["React","ItemList","InsertForm","NewList","BrowserRouter","Router","Switch","Route","NavLink","Link","withRouter","Error404View","EditList","Button","Navbar","NavbarBrand","SignUp","ValidatedLoginForm","API_URL","App","Component","constructor","props","state","lists","newList","nextListId","editedListId","list","componentDidMount","fetch","then","res","json","setState","catch","error","console","log","addNewList","newTitle","id","title","options","method","headers","body","JSON","stringify","response","ok","newLists","newListId","status","statusText","err","message","history","push","setEditedListId","deleteItem","list_id","item_id","find","l","item","filter","i","deleteList","newIx","findIndex","splice","handleEditList","saveList","newItems","render","showLogIn","newItem","addNewItem","routeProps","match","params","Home"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ItemList from './ItemList';\nimport InsertForm from './InsertForm';\nimport NewList from './NewList';\nimport { BrowserRouter as Router, Switch, Route, NavLink, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Error404View from './Error404View';\nimport EditList from './EditList';\nimport Button from 'react-bootstrap/Button';\nimport Navbar from 'react-bootstrap/Navbar';\n// import Form from 'react-bootstrap/Form';\nimport { NavbarBrand } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import Login from \"./components/login.js\";\nimport SignUp from \"./components/signUp.js\";\nimport ValidatedLoginForm from \"./components/validatedLoginForm.js\";\n\n\nconst API_URL = \"/inventarium/lists\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        lists: [],\n        newList: \"\",\n        nextListId: 6,\n        editedListId: null,\n        list: null,\n      };\n    }\n\n  componentDidMount() {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(json => {\n        // Upon success, update lists\n        this.setState({ lists: json });\n      })\n      .catch(error => {\n        // upon failure, show error message\n        console.log(\"Error\")\n      });\n  }\n\n//   async addNewItem(newItem, list_id) {\n//     // copy lists\n//     let newItems = [...this.state.lists.items];\n//     // find the index of the list using listId\n//     let newIx = newItem.findIndex((l) => l.id === list_id);\n//     // get that specific list using the index\n//     let newList = newItems[newIx]\n//     // add newItem to that list  \n//     newList.items.push(newItem)\n\n//     // POST\n//     let options = {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(newItems)\n//     };\n\n//   try {\n//     let response = await fetch(API_URL, options);\n//     if (response.ok) {\n//     let newLists = await response.json();\n//     this.setState({ lists: newLists });\n//     } else {\n//       console.log(\"ERROR:\", response.status, response.statusText);\n//       }\n//     } catch (err) {\n//       console.log(\"EXCEPTION:\", err.message);\n//   }\n//     this.props.history.push('/mylists');\n// }\n\n  // addNewItem = (newItem, list_id) => {\n  //   // copy lists\n  //   let newLists = [...this.state.lists];\n  //   // find the index of the list using list_id\n  //   let newIx = newLists.findIndex((l) => l.id === list_id);\n  //   // get that specific list using the index\n  //   let newList = newLists[newIx];\n  //   // add newItem to that list  \n  //   newList.item.push(newItem)\n  //   // update state replacing lists with the specific list\n  //   this.setState({lists: newLists})\n  //   // change view to itemList\n  //   this.props.history.push('/mylists');\n  // }\n\n  async addNewList(newTitle) {\n    let newList = { id: this.state.nextListId, title: newTitle };\n\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newList)\n    };\n\n    try {\n      let response = await fetch(API_URL, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        this.setState({\n          lists: [...this.state.lists, newLists],\n          nextListId: this.state.newListId +1 });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      console.log(\"EXCEPTION:\", err.message);\n    }\n    // Redirect to '/mylists'\n    this.props.history.push('/mylists');\n  }\n\n  setEditedListId(editedListId) {\n    this.setState({ editedListId: editedListId });\n  }\n\n  async deleteItem(list_id, item_id) {\n    // DELETE item from database\n    let options = {\n      method: \"DELETE\"\n    };\n    try {\n      let response = await fetch(\"/inventarium/item\", options);\n      if (response.ok) {\n        let newLists = [...this.state.lists]\n        let newList = newLists.find((l) => l.id === list_id);\n        newList.item = newList.item.filter((i) => i !== item_id);\n        // upon success, update the list of items\n        this.setState({ lists: newLists });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  async deleteList(list_id) {\n    // DELETE list from database\n    let options = {\n      method: \"DELETE\"\n    };\n    \n    try {\n      let response = await fetch(`${API_URL}/${list_id}`, options);\n      if (response.ok) {\n        let newLists = await response.json();\n        let newIx = newLists.findIndex((l) => l.id === list_id);\n        newLists.splice(newIx, 1)\n        // upon success, update tasks\n        this.setState({ lists: newLists });\n      } else {\n        console.log(\"ERROR:\", response.status, response.statusText);\n      }\n    } catch (err) {\n      // upon failure, show error message\n      console.log(\"EXCEPTION:\", err.message);\n    }\n  }\n\n  handleEditList(list_id) {\n    let newLists = [...this.state.lists]\n    let newIx = newLists.findIndex((l) => l.id === list_id);\n    let newList = newLists[newIx];\n    this.setState({list: newList})\n    console.log(newList);\n  }\n\n  saveList(list_id, newTitle, newItems) {\n    let newLists = [...this.state.lists];\n    let newList = newLists.find((l) => l.id === list_id);\n    newList.title = newTitle;\n    newList.item = newItems;\n    this.setState({lists: newLists})\n    this.props.history.push('/mylists');\n  }\n\n  // toggleLogIn(event) {\n  //   event.preventDefault();\n  //   let boolean = (this.state.showLogIn = !this.state.showLogIn);\n  //     this.setState({showLogIn: boolean}) \n  // }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n        <div className={this.state.showLogIn ? 'false' : 'true'}>\n\n            <Navbar bg='info' expand=\"lg\">\n              <Button variant=\"info\"><NavLink to='/' exact><NavbarBrand>INVENTARIUM</NavbarBrand></NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/mylists' exact activeClassName='selected'>My Lists</NavLink></Button>\n              <Button variant=\"info\"><NavLink to='/addlist' activeClassName='selected'>Create New List</NavLink></Button>\n            </Navbar>\n          </div>\n              \n            <Switch> \n              <Route path='/' exact>\n                <Home />\n              </Route>\n\n              <Route path='/mylists'>\n                <ItemList\n                setEditedListId={this.setEditedListId}\n                lists={this.state.lists}\n                deleteItem={this.deleteItem}\n                deleteList={(list_id) => this.deleteList(list_id)}\n                handleEditList={(i) => this.handleEditList(i)} />\n              </Route>\n\n              <Route path='/additem'> \n                <InsertForm editedListId={this.state.editedListId}\n                newItem={this.state.newItem}\n                addNewItem={this.addNewItem}\n                id={this.state.lists.id}/>\n              </Route>\n\n              <Route path='/addlist'>\n                <NewList addNewList={(newTitle) => this.addNewList(newTitle)} />\n              </Route>\n\n              <Route path='/editlist/:id' render={\n                (routeProps) => {\n                  let list = this.state.lists.find((l) => l.id === routeProps.match.params.id);\n                  return <EditList list={list}\n                  saveList={(list_id, newTitle, newItems) => this.saveList(list_id, newTitle, newItems)}\n                  />\n                }\n              } />\n              \n              <div>\n                <div>\n                  <Route path='/login'>\n                    <ValidatedLoginForm />\n                  </Route>\n                  <Route path='/sign-up'>\n                    <SignUp />\n                  </Route>\n                </div>\n              </div>\n\n              <Error404View />\n\n            </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return(\n      <div className=\"text-center\">\n        <h1>Welcome</h1>\n        <div>\n              <Button variant=\"info\"><Link to=\"/login\">SIGN IN</Link></Button>\n              <Button variant=\"info\"><Link to=\"/sign-up\">SIGN UP</Link></Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);"]},"metadata":{},"sourceType":"module"}